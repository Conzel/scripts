#!/bin/bash

config_location="$HOME/.config/dot"

# Maybe we can do without config, just leaving it here in case
# [ ! -f "$config_location/linked_files" ] && echo "Config file does not exist. Creating..."  \
#     && mkdir -p $config_location && touch "$config_location/linked_files"

repo_location="$HOME/.dotfiles"
[ ! -d "$repo_location" ] && echo "No repository found. Please create a standard Github repository you would like to use under $HOME/.dotfiles" \
    && echo "Remote branch should be called origin"

# for help call
usage () {
    echo "--help | h                   print this menu and exit "
    echo "pull <branch>                pulls from specified branch from origin"
    echo "push <branch>                pushes to specified branch" 
    echo "checkout <branch>            checkout to specific branch" 
    echo "commit <message>             commits with specified message to active branch in repository" 
    echo "add <file>                   copies file to repository and replaces it with a symlink to the repo" 
    echo "unlink <file>                replaces symlink with file copy from dotfiles directory"
    echo "remove <file>                removes file from repository. If given file is a symlink in actual directory, unlinks it beforehand"
}

gitd () {
    git --git-dir=$HOME/.dotfiles/.git --work-tree /home/almico/.dotfiles "$@"
}

error_report() {
    # $1: command used $2 file targeted $3 filepath $4 action
    echo "Execution failed [unchecked error]"
    echo "Command: $1; file targeted: $2; filepath: $3; action: $4"
}

[ "$1" == "" ] && usage && exit

# main loop
while [ "$1" != "" ]; do
    case $1 in
        --help | -h )      usage 
                           exit
                           ;;
        pull )      shift
                    gitd pull origin $1
                    exit
                    ;;
        commit )    shift
                    gitd commit -a -m "$1"
                    ;;
        checkout )  shift
                    gitd checkout $1
                    ;;
        push )      shift
                    gitd push origin $1 
                    ;;
        status )    gitd status
                    exit
                    ;;
        add )
                    # while loop for process of multiple files
                    while [ "$2" != "" ]; do
                        shift
                        [ -d $1 ] && echo "Directories are not supported (yet). Skipping." && continue
                        dotfile=$(echo $PWD | sed 's@'$HOME'@'$HOME'/.dotfiles@')
                        echo "Searching $dotfile..."
                        [ -f $dotfile/$1 ] && echo "This file already exists in your repository. Skipping. " && continue
                        mkdir -p $dotfile || error_report add $1 $dotfile/$1 "Directory Creation" && continue
                        cp $1 $dotfile/$1 || error_report add $1 $dotfile/$1 "Copying" && continue
                        echo "Copied file \"$1\" to repository under \"$dotfile\". "
                        gitd add $dotfile/$1
                        echo "Added file to commit."
                        rm $1 
                        ln -s $dotfile/$1 $1 || error_report add $1 $dotfile/$1 "Symlinking"  && continue
                        echo "Replaced file with symlink."
                    done 
                    ;;
        unlink )   
                    while [ "$2" != "" ]; do
                        shift
                        [ ! -L $1 ] && echo "The given name is not a symbolic link. Skipping." && continue
                        dotfile=$(echo $PWD | sed 's@'$HOME'@'$HOME'/.dotfiles@')
                        [ ! -f $dotfile/$1 ] && echo "This file is not in your repository. Skipping." && continue
                        rm $1 || error_report unlink $1 $dotfile/$1 "Removing symlink" && continue
                        cp $dotfile/$1 $1 || error_report unlink $1 $dotfile/$1 "Copying dotfile" && continue
                        echo "Replaced symlink with copy from repository."
                    done
                    ;;

        remove )    
                    while [ "$2" != "" ]; do
                            shift
                            [ -d $1 ] && echo "Directories are not supported (yet). Skipping." && continue
                            [ -L $1 ] && echo "Unlinking file \"$1\" " && dot unlink $1
                            dotfile=$(echo $PWD | sed 's@'$HOME'@'$HOME'/.dotfiles@')
                            [ ! -f $dotfile/$1 ] && echo "This file is not in your repository. Skipping." && continue
                            rm $dotfile/$1 ||  error_report remove $1 $dotfile/$1 "Removing dotfile from repository" && continue
                            echo "Removed file from repository."
                    done
                    ;; 
                    
        * )         usage
                    exit 1
    esac
    shift
done
exit

